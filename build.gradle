def mcVersion         = "1.12.2" // Always matches the Minecraft version the mod is for.
def majorModVersion   = "3" // Removing item/blocks, changing mechanics, updating to a new Minecraft version.
def majorApiModVersion     = "0" // Changing the order of enums, return types of methods, removing methods
def minorModVersion   = "1" // Adding item, blocks, tile entities, Adding new mechanics., Deprecating public methods.
def patchVersion = "2" //Bugfixes.
def suffix = "" // "-final" - last release for that Minecraft, "-betaX" - Pre-releases, "-rcX"-Release Candidates
version = mcVersion+"-"+majorModVersion+"."+majorApiModVersion+"."+minorModVersion+"."+patchVersion+suffix

def env = System.getenv()
def minecraftModdingEnv = env['MinecraftModdingEnv'] != null ? env['MinecraftModdingEnv'].trim() : "dev"

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

group= "info.jbcs.minecraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "vending"

targetCompatibility = "1.8"
sourceCompatibility = "1.8"



minecraft {
    version = "1.12.2-14.23.4.2705"
    mappings = "snapshot_20171003"

    if (file("../run").exists()) {
        runDir = "../run"
    } else {
        runDir = "run"
    }
    replace "{@vendingVersion}":project.version
    replace "{@mcVersion}":"["+mcVersion+"]"
}

repositories {
    maven {
        url "http://kamildanak.com/maven/"
    }
}

if ( minecraftModdingEnv == "production" ) {
    dependencies {
        compile name: "foamflower", group: "com.kamildanak.minecraft.foamflower", version: "1.12.2-1.0.0.0-beta1", classifier: "deobf"
        compile name: "enderpay", group: "com.kamildanak.minecraft.enderpay", version: "1.12.2-1.0.1.0", classifier: "deobf"
        testCompile 'org.mockito:mockito-core:2.7.22'
        testCompile 'junit:junit:4.12'
    }
} else {
    dependencies {
        compile project(':Foamflower')
        compile project(':EnderPay')
        testCompile 'org.mockito:mockito-core:2.7.22'
        testCompile 'junit:junit:4.12'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}
tasks.build.dependsOn('sourceJar', 'deobfJar')

artifacts {
    archives deobfJar
    archives sourceJar
    archives jar
}
